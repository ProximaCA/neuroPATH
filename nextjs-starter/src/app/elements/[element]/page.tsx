"use client";

import {
  Heading,
  Text,
  Button,
  Column,
  Row,
  Badge,
  Card,
  Icon,
  Media,
  Avatar,
} from "@once-ui-system/core";
import Link from "next/link";
import { useParams } from "next/navigation";
import { useEffect, useState } from "react";
import { supabase } from "../../../lib/supabase";

interface Mission {
  id: string;
  name: string;
  description: string;
  order: number;
  audio_url: string | null;
}

interface Element {
  id: string;
  name: string;
  description: string;
  color_code: string;
  image_url: string;
  missions?: Mission[];
}

export default function ElementPage() {
  const params = useParams();
  const elementId = params.element as string;
  const [element, setElement] = useState<Element | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  // Fallback –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å—Ç–∏—Ö–∏–∏ –í–æ–¥—ã
  const fallbackWaterElement = {
    id: 'f2e4e168-e5a9-4a9c-b829-3e2c1a8a0b1a',
    name: '–í–æ–¥–∞',
    description: '–°—Ç–∏—Ö–∏—è —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –≥–ª—É–±–∏–Ω—ã –∏ –æ—á–∏—â–µ–Ω–∏—è. –ü–æ–º–æ–≥–∞–µ—Ç –ø—Ä–æ—Ä–∞–±–æ—Ç–∞—Ç—å —á—É–≤—Å—Ç–≤–∞ –∏ –Ω–∞–π—Ç–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–æ—Ç–æ–∫.',
    color_code: '#00A9FF',
    image_url: '/images/elements/water.jpg',
    missions: [
      {
        id: 'd9e3f8a0-cb3a-4c9c-8f1a-6d5b7a8e9c0d',
        name: '–ü–æ–≥—Ä—É–∂–µ–Ω–∏–µ',
        description: '–ü–µ—Ä–≤—ã–π –∫–æ–Ω—Ç–∞–∫—Ç —Å–æ —Å—Ç–∏—Ö–∏–µ–π –í–æ–¥—ã —á–µ—Ä–µ–∑ –º–µ–¥–∏—Ç–∞—Ü–∏—é –¥—ã—Ö–∞–Ω–∏—è',
        order: 1,
        audio_url: null
      },
      {
        id: 'a7b2c1d0-e8f9-4a3b-9c8d-7e6f5a4b3c2d',
        name: '–†–∞—Å—Ç–≤–æ—Ä–µ–Ω–∏–µ',
        description: '–û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –æ—Ç —Å—Ç—Ä–∞—Ö–æ–≤ –∏ —Ç—Ä–µ–≤–æ–≥ —á–µ—Ä–µ–∑ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—é',
        order: 2,
        audio_url: null
      },
      {
        id: 'b3c4d5e6-f7a8-4b9c-8d1e-2f3a4b5c6d7e',
        name: '–ü–æ—Ç–æ–∫ –ø—Ä–∏–Ω—è—Ç–∏—è',
        description: '–ì–ª—É–±–æ–∫–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø—Ä–∏–Ω—è—Ç–∏—è –∏ –æ—Ç–ø—É—Å–∫–∞–Ω–∏—è',
        order: 3,
        audio_url: null
      }
    ]
  };

  useEffect(() => {
    const fetchElement = async () => {
      try {
        setLoading(true);
        
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å—Ç–∏—Ö–∏–∏
        const { data: elementData, error: elementError } = await supabase
          .from('elements')
          .select('*')
          .eq('id', 'f2e4e168-e5a9-4a9c-b829-3e2c1a8a0b1a') // Water element ID
          .single();

        if (elementError) {
          console.warn('Supabase element error:', elementError);
          console.log('Using fallback data for element');
          setElement(fallbackWaterElement);
          return;
        }

        // –ü–æ–ª—É—á–∞–µ–º –º–∏—Å—Å–∏–∏ –¥–ª—è —Å—Ç–∏—Ö–∏–∏
        const { data: missionsData, error: missionsError } = await supabase
          .from('missions')
          .select('*')
          .eq('element_id', elementData.id)
          .order('order');

        if (missionsError) {
          console.warn('Supabase missions error:', missionsError);
          console.log('Using fallback missions');
          setElement({
            ...elementData,
            missions: fallbackWaterElement.missions
          });
          return;
        }

        setElement({
          ...elementData,
          missions: missionsData || fallbackWaterElement.missions
        });

      } catch (err) {
        console.error('Error fetching element:', err);
        console.log('Using fallback data due to error');
        setElement(fallbackWaterElement);
      } finally {
        setLoading(false);
      }
    };

    if (elementId === 'water') {
      fetchElement();
    } else {
      setError('–≠—Ç–∞ —Å—Ç–∏—Ö–∏—è –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
      setLoading(false);
    }
  }, [elementId]);

  if (loading) {
    return (
      <Column fillWidth center padding="l" style={{ minHeight: "100vh" }}>
        <Column maxWidth="s" align="center" gap="l">
          <Text variant="heading-strong-l">–ó–∞–≥—Ä—É–∑–∫–∞...</Text>
        </Column>
      </Column>
    );
  }

  if (error || !element) {
    return (
      <Column fillWidth center padding="l" style={{ minHeight: "100vh" }}>
        <Column maxWidth="s" align="center" gap="l">
          <Heading variant="heading-strong-l">
            {error || '–°—Ç–∏—Ö–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞'}
          </Heading>
          <Link href="/">
            <Button variant="secondary" arrowIcon>
              –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
            </Button>
          </Link>
        </Column>
      </Column>
    );
  }

  const completedMissions = 0; // TODO: –ü–æ–ª—É—á–∞—Ç—å –∏–∑ mission_progress
  const progressPercent = (completedMissions / (element.missions?.length || 1)) * 100;

  // –ü–æ–ª—É—á–∞–µ–º –∏–º–µ–Ω–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–π –º–∏—Å—Å–∏–∏
  const getArtifactInfo = (missionIndex: number) => {
    const artifacts = [
      { 
        name: "–ñ–µ–º—á—É–∂–∏–Ω–∞ –ß—É—Ç–∫–æ—Å—Ç–∏", 
        src: "/images/artifacts/pearl.jpg",
        description: "–°–∏–º–≤–æ–ª –≥–ª—É–±–æ–∫–æ–≥–æ –ø–æ–Ω–∏–º–∞–Ω–∏—è —Å–≤–æ–∏—Ö —ç–º–æ—Ü–∏–π. –ü–æ–º–æ–≥–∞–µ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å —Ç–æ–Ω–∫–∏–µ –æ—Ç—Ç–µ–Ω–∫–∏ —á—É–≤—Å—Ç–≤ –∏ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∏—Ö –±–µ–∑ –æ—Å—É–∂–¥–µ–Ω–∏—è."
      },
      { 
        name: "–°–ª–µ–∑–∞ –°–æ—á—É–≤—Å—Ç–≤–∏—è", 
        src: "/images/artifacts/lock.jpg",
        description: "–ö—Ä–∏—Å—Ç–∞–ª–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è —ç–º–ø–∞—Ç–∏—è. –û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–≤—è–∑—å —Å –¥—Ä—É–≥–∏–º–∏ —á–µ—Ä–µ–∑ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é —É—è–∑–≤–∏–º–æ—Å—Ç—å."
      },
      { 
        name: "–ö—Ä–∏—Å—Ç–∞–ª–ª –ü—Ä–∏–Ω—è—Ç–∏—è", 
        src: "/images/artifacts/lock.jpg",
        description: "–ü—Ä–æ–∑—Ä–∞—á–Ω—ã–π –∫–∞–º–µ–Ω—å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –º—É–¥—Ä–æ—Å—Ç–∏. –î–∞—Ä—É–µ—Ç —Å–∏–ª—É –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∂–∏–∑–Ω—å —Ç–∞–∫–æ–π, –∫–∞–∫–∞—è –æ–Ω–∞ –µ—Å—Ç—å, –Ω–∞—Ö–æ–¥—è –ø–æ–∫–æ–π –≤ –ø–æ—Ç–æ–∫–µ –ø–µ—Ä–µ–º–µ–Ω."
      }
    ];
    return artifacts[missionIndex] || { 
      name: "–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ", 
      src: "/images/artifacts/lock.jpg",
      description: "–≠—Ç–æ—Ç –∞—Ä—Ç–µ—Ñ–∞–∫—Ç –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –º–∏—Å—Å–∏–π."
    };
  };

  // –ü–æ–ª—É—á–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –º–∏—Å—Å–∏–π
  const getMissionImage = (missionIndex: number) => {
    const images = [
      "/images/elements/water_mission_1.jpg", // –ü–æ–≥—Ä—É–∂–µ–Ω–∏–µ - –µ—Å—Ç—å
      "/images/demo.jpg", // –†–∞—Å—Ç–≤–æ—Ä–µ–Ω–∏–µ - fallback –ø–æ–∫–∞ –Ω–µ—Ç –∫–∞—Ä—Ç–∏–Ω–∫–∏
      "/images/demo.jpg"  // –ü–æ—Ç–æ–∫ –ø—Ä–∏–Ω—è—Ç–∏—è - fallback –ø–æ–∫–∞ –Ω–µ—Ç –∫–∞—Ä—Ç–∏–Ω–∫–∏
    ];
    return images[missionIndex] || "/images/demo.jpg";
  };

  // –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è –º–∏—Å—Å–∏–π
  const getMissionDetails = (missionIndex: number) => {
    const details = [
      "–ü–µ—Ä–≤—ã–π –∫–æ–Ω—Ç–∞–∫—Ç —Å–æ —Å—Ç–∏—Ö–∏–µ–π –í–æ–¥—ã. –ú—è–≥–∫–æ–µ –ø–æ–≥—Ä—É–∂–µ–Ω–∏–µ –≤ –º–µ–¥–∏—Ç–∞—Ç–∏–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —á–µ—Ä–µ–∑ –¥—ã—Ö–∞–Ω–∏–µ –∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—é. –ü–æ–º–æ–∂–µ—Ç –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–æ—Ç–æ–∫ –∏ –Ω–∞—É—á–∏—Ç—å—Å—è –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Å–≤–æ–∏ —ç–º–æ—Ü–∏–∏ –±–µ–∑ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è.",
      "–û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –æ—Ç —Å—Ç—Ä–∞—Ö–æ–≤ –∏ —Ç—Ä–µ–≤–æ–≥ —á–µ—Ä–µ–∑ —Ç–µ—Ö–Ω–∏–∫—É —Ä–∞—Å—Ç–≤–æ—Ä–µ–Ω–∏—è. –†–∞–±–æ—Ç–∞ —Å –¥—ã—Ö–∞–Ω–∏–µ–º 4-7-8 –∏ –æ–±—Ä–∞–∑–Ω—ã–º–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è–º–∏. –£—á–∏–º—Å—è –æ—Ç–ø—É—Å–∫–∞—Ç—å —Ç–æ, —á—Ç–æ –Ω–∞—Å —Å–∫–æ–≤—ã–≤–∞–µ—Ç.",
      "–ì–ª—É–±–æ–∫–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø—Ä–∏–Ω—è—Ç–∏—è –∂–∏–∑–Ω–∏ —Ç–∞–∫–æ–π, –∫–∞–∫–∞—è –æ–Ω–∞ –µ—Å—Ç—å. –†–∞–±–æ—Ç–∞ —Å –æ–±–∏–¥–∞–º–∏ –∏ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ—Å—Ç—è–º–∏. –û–±—Ä–µ—Ç–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –ø–æ–∫–æ—è —á–µ—Ä–µ–∑ –ø–æ—Ç–æ–∫ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏."
    ];
    return details[missionIndex] || "–û–ø–∏—Å–∞–Ω–∏–µ –º–∏—Å—Å–∏–∏ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ—Å–ª–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏.";
  };

  return (
    <Column fillWidth center padding="l" style={{ minHeight: "100vh" }}>
      <Column maxWidth="m" gap="xl">
        
        {/* Header */}
        <Column gap="m">
          <Row gap="s" align="center" horizontal="space-between">
            <Link href="/">
              <Button variant="tertiary" prefixIcon="arrow-left" size="s">
                –ù–∞–∑–∞–¥
              </Button>
            </Link>
            <Link href="/profile">
              <Button variant="tertiary" size="s">
                üë§
              </Button>
            </Link>
          </Row>

          <Row gap="m" align="center">
            <Text variant="display-strong-l" style={{ fontSize: "3rem" }}>
              üåä
            </Text>
            <Column gap="xs">
              <Heading 
                variant="display-strong-l" 
                style={{ color: element.color_code }}
              >
                {element.name}
              </Heading>
              <Badge>
                {completedMissions} –∏–∑ {element.missions?.length || 0} –º–∏—Å—Å–∏–π
              </Badge>
            </Column>
          </Row>

          <Text
            variant="body-default-l"
            onBackground="neutral-weak"
            wrap="balance"
          >
            {element.description}
          </Text>

          {/* Progress Bar */}
          <Column gap="s">
            <Row horizontal="space-between" align="center">
              <Text variant="body-default-s" onBackground="neutral-weak">
                –ü—Ä–æ–≥—Ä–µ—Å—Å —Å—Ç–∏—Ö–∏–∏
              </Text>
              <Text variant="body-default-s" style={{ color: element.color_code }}>
                {Math.round(progressPercent)}%
              </Text>
            </Row>
            <div
              style={{ 
                width: "100%",
                height: "8px",
                backgroundColor: "var(--neutral-alpha-weak)",
                borderRadius: "4px",
                overflow: "hidden"
              }}
            >
              <div
                style={{
                  width: `${progressPercent}%`,
                  height: "100%",
                  backgroundColor: element.color_code,
                  transition: "width 0.3s ease"
                }}
              />
            </div>
          </Column>
        </Column>

        {/* Missions List */}
        <Column gap="l">
          <Heading variant="heading-strong-l">–ú–∏—Å—Å–∏–∏</Heading>
          
          <Column gap="l">
            {element.missions?.map((mission, index) => {
              const isAvailable = index === 0;
              const artifact = getArtifactInfo(index);
              const missionImage = getMissionImage(index);
              const missionDetails = getMissionDetails(index);

              return (
                <Column key={mission.id} gap="m">
                  {/* Mission Image - using div with background-image */}
                  <div
                    style={{
                      width: "100%",
                      height: "900px",
                      borderRadius: "12px",
                      backgroundImage: `url(${missionImage})`,
                      backgroundSize: "cover",
                      backgroundPosition: "center",
                      backgroundRepeat: "no-repeat",
                      filter: isAvailable ? "none" : "grayscale(100%)",
                      backgroundColor: "#f0f0f0"
                    }}
                  />

                  <Card
                    radius="l"
                    border="neutral-alpha-medium"
                    direction="column"
                    style={{
                      background: isAvailable 
                        ? "var(--neutral-alpha-weak)"
                        : "var(--neutral-alpha-weak)",
                      borderColor: isAvailable
                        ? "var(--neutral-alpha-medium)"
                        : "var(--neutral-alpha-weak)",
                      opacity: isAvailable ? 1 : 0.6,
                    }}
                  >
                    {/* Mission Content */}
                    <Column padding="l" gap="m">
                      <Row gap="l" align="start">
                        
                        {/* Mission Status Icon */}
                        <Column align="center" vertical="center" style={{ minWidth: "40px" }}>
                          {isAvailable ? (
                            <Icon 
                              name="play-circle" 
                              size="l" 
                              onBackground="neutral-medium"
                            />
                          ) : (
                            <Text style={{ fontSize: "2rem" }}>üîí</Text>
                          )}
                        </Column>

                        {/* Mission Info */}
                        <Column gap="s" fillWidth>
                          <Row gap="s" align="center">
                            <Heading variant="heading-strong-m">
                              {mission.name}
                            </Heading>
                            <Badge>
                              5 –º–∏–Ω
                            </Badge>
                          </Row>

                          <Text
                            variant="body-default-s"
                            onBackground="neutral-weak"
                          >
                            {mission.description}
                          </Text>
                        </Column>

                        {/* Action Button */}
                        <Column align="end">
                          {isAvailable ? (
                            <Link href={`/elements/water/missions/${index + 1}`}>
                              <Button
                                variant="primary"
                                size="s"
                                style={{ 
                                  backgroundColor: element.color_code,
                                  borderColor: element.color_code,
                                }}
                                arrowIcon
                              >
                                –ù–∞—á–∞—Ç—å
                              </Button>
                            </Link>
                          ) : (
                            <Button
                              variant="secondary"
                              size="s"
                              disabled
                            >
                              –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ
                            </Button>
                          )}
                        </Column>
                      </Row>

                      {/* Artifact Section */}
                      <Column gap="s" paddingTop="s">
                        <Row gap="m" align="center">
                          <Avatar 
                            src={artifact.src}
                            size="xl"
                            style={{
                              filter: isAvailable ? "none" : "grayscale(100%)"
                            }}
                          />
                          <Column gap="xs" fillWidth>
                            <Row gap="xs" align="center">
                              ‚≠ê
                              <Text variant="code-default-xs" onBackground="neutral-weak">
                                –ê—Ä—Ç–µ—Ñ–∞–∫—Ç: {artifact.name}
                              </Text>
                            </Row>
                            <Text
                              variant="body-default-s"
                              onBackground="neutral-weak"
                              style={{
                                fontSize: "0.875rem",
                                lineHeight: "1.4",
                                opacity: isAvailable ? 1 : 0.7
                              }}
                            >
                              {artifact.description}
                            </Text>
                          </Column>
                        </Row>
                      </Column>
                    </Column>
                  </Card>

                  {/* Mission Details Below Card */}
                  <Text
                    variant="body-default-m"
                    onBackground="neutral-weak"
                    style={{
                      padding: "16px",
                      backgroundColor: "var(--neutral-alpha-weak)",
                      borderRadius: "12px",
                      border: "1px solid var(--neutral-alpha-weak)",
                      lineHeight: "1.6",
                      opacity: isAvailable ? 1 : 0.7
                    }}
                  >
                    {missionDetails}
                  </Text>
                </Column>
              );
            })}
          </Column>
        </Column>

      </Column>
    </Column>
  );
} 